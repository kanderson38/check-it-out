{"version":3,"sources":["components/Home.js","firebaseConfig.js","components/CategoryItem.js","components/SearchBar.js","components/FilterPane.js","components/BookItem.js","components/Books.js","components/ShowBook.js","components/SearchResultItem.js","components/AddBook.js","App.js","serviceWorker.js","index.js"],"names":["Home","console","log","this","props","match","react_default","a","createElement","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CategoryItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","checked","state","isChecked","setState","addFilterCallback","target","name","removeFilterCallback","className","type","onChange","SearchBar","onSearchChange","searchText","value","searchBooksCallback","placeholder","FilterPane","categories","_this2","allCategories","firestore","collection","get","then","querySnapshot","forEach","doc","push","data","categoryItems","map","cat","src_components_CategoryItem","key","src_components_SearchBar","BookItem","react_router_dom","to","concat","url","title","author","Books","onAddFilter","allFilters","filters","includes","onFilterResults","onRemoveFilter","index","indexOf","splice","onSearchBooks","searchString","booksToSearch","books","foundBooks","book","toLowerCase","results","filteredBooks","filteredResults","thingToCheck","where","bookItems","src_components_BookItem","assign","defaultBooks","allBooks","src_components_FilterPane","ShowBook","params","id","exists","catch","error","src","thumbnail","alt","publisher","publishedDate","description","createdByName","SearchResultItem","addBookCallback","onClick","API_URL","AddBook","onHandleSearchClick","preventDefault","getBooks","onHandleSearchChange","searchQuery","addBook","set","previewLink","createdByEmail","auth","currentUser","email","displayName","shouldRedirect","addedBook","axios","response","searchList","items","src_components_SearchResultItem","volumeInfo","authors","imageLinks","smallThumbnail","movieSearch","clickSearch","react_router","require","firebaseAppAuth","providers","googleProvider","GoogleAuthProvider","Users","App","checkAgainstDatabase","user","addUserToDatabase","onSignIn","provider","signInWithPopup","result","authUser","_this$props","signOut","path","exact","component","render","src_components_Books","src_components_ShowBook","withFirebaseAuth","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f283c27a.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './Home.css';\n\n\nclass Home extends Component {\n  render () {\n    console.log(this.props.match)\n\n  return (\n    <div>\n      Home Page\n    </div>\n  )}\n}\n\nexport default Home;","\n\nimport * as firebase from 'firebase';\n// import firestore from 'firebase/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyAD0ttSvuW22OTa4SidFkKEJx7fBGjFvr0\",\n  authDomain: \"check-it-out-efcdc.firebaseapp.com\",\n  databaseURL: \"https://check-it-out-efcdc.firebaseio.com\",\n  projectId: \"check-it-out-efcdc\",\n  storageBucket: \"check-it-out-efcdc.appspot.com\",\n  messagingSenderId: \"407557781729\",\n  appId: \"1:407557781729:web:05052bbc5c9ac84f\"\n};\nfirebase.initializeApp(config);\n\n// firebase.firestore().settings();\n\nexport default firebase;","import React, { Component } from 'react';\nimport './CategoryItem.css'\n\nclass CategoryItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: false,\n    }\n  }\n\n  handleInputChange = (event) => {\n    const checked = this.state.isChecked;\n    this.setState({\n      isChecked: !checked,\n    })\n\n    if(this.state.isChecked === false) {\n      this.props.addFilterCallback(event.target.name);\n    } else {\n      this.props.removeFilterCallback(event.target.name);\n    }\n  }\n\n  render() {\n    return (\n      <label className=\"category-checkbox\">\n        <input\n          name={this.props.name}\n          type=\"checkbox\"\n          checked={this.state.isChecked}\n          onChange={this.handleInputChange} />\n        {this.props.name}\n      </label>\n    )\n  };\n}\n\nexport default CategoryItem;","import React, { Component } from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({\n      searchText: event.target.value,\n    });\n\n    this.props.searchBooksCallback(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"search-bar-container\">\n        <label className=\"search-label\">\n          Search Books:\n        <input className=\"search-input\"\n            placeholder=\"Title, author\"\n            value={this.state.searchText}\n            onChange={this.onSearchChange}></input>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport firebase from '../firebaseConfig';\nimport CategoryItem from './CategoryItem.js';\nimport SearchBar from './SearchBar.js';\nimport './FilterPane.css';\n\nclass FilterPane extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n    }\n  };\n\n  componentWillMount() {\n    const allCategories = this.state.categories;\n    const db = firebase.firestore().collection(\"categories\");\n\n    db.get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        allCategories.push({ name: doc.data().name, type: doc.data().type });\n      });\n\n      const categoryItems = allCategories.map((cat) => {\n        return <CategoryItem\n          key={cat.name}\n          name={cat.name}\n          type={cat.type}\n          addFilterCallback={this.props.addFilterCallback}\n          removeFilterCallback={this.props.removeFilterCallback}\n        />\n      });\n\n      this.setState({\n        categories: categoryItems,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"filterpane-container\">\n        <SearchBar searchBooksCallback={this.props.searchBooksCallback}/>\n        <div className=\"categories-container\">\n          <p>Filter by Category:</p>\n          {this.state.categories}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default FilterPane;","import React, {Component} from 'react';\n\nimport { Link } from 'react-router-dom';\nimport './BookItem.css';\n\nclass BookItem extends Component {\n\n  render () {\n    \n    return (\n      <div className=\"bookitem\">\n        <Link to={`${this.props.match.url}${this.props.title}`}>{this.props.title}</Link><p> {this.props.author}</p>\n      </div>\n    )\n  }\n}\n\nexport default BookItem;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport FilterPane from './FilterPane.js';\nimport BookItem from './BookItem.js';\nimport firebase from '../firebaseConfig.js'\n\nimport './Books.css';\n\n\nclass Books extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      books: [],\n      defaultBooks: [],\n      filters: [],\n    }\n\n  }\n\n  componentWillMount() {\n    const allBooks = this.state.books;\n    const db = firebase.firestore().collection(\"books\");\n\n    db.get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n\n        allBooks.push({ title: doc.data().title, author: doc.data().author });\n\n      });\n\n      const bookItems = allBooks.map((book) => {\n        return <BookItem\n          {...this.props}\n          key={book.title}\n          title={book.title}\n          author={book.author}\n        />\n      });\n\n      this.setState({\n        books: bookItems,\n        defaultBooks: bookItems,\n      });\n    });\n  }\n\n  onAddFilter = (name) => {\n    const allFilters = this.state.filters;\n    if (!allFilters.includes(name)) {\n      allFilters.push(name);\n    }\n\n    // console.log(allFilters);\n    this.setState({\n      filters: allFilters,\n    });\n\n    this.onFilterResults();\n\n  }\n\n  onRemoveFilter = (name) => {\n    const allFilters = this.state.filters;\n    if (allFilters.includes(name)) {\n      let index = allFilters.indexOf(name);\n      if (index !== -1) allFilters.splice(index, 1);\n    }\n\n    this.setState({\n      filters: allFilters,\n    })\n\n    this.onFilterResults();\n\n  }\n\n  onSearchBooks = (searchString) => {\n    const booksToSearch = this.state.books;\n    const foundBooks = [];\n\n    if (searchString !== \"\") {\n      booksToSearch.forEach(function (book) {\n        if (book.props.title.toLowerCase().includes(searchString.toLowerCase()) || \n        book.props.author.toLowerCase().includes(searchString.toLowerCase())) {\n          foundBooks.push(book);\n        }\n      });\n    } else {\n      this.onFilterResults();\n    }\n\n\n    this.setState({\n      books: foundBooks,\n    })\n  }\n\n  onFilterResults = (results) => {\n    const filteredBooks = [];\n    let filteredResults = firebase.firestore().collection('books');\n\n    this.state.filters.forEach(function (cat) {\n      const thingToCheck = 'categories.' + cat;\n      filteredResults = filteredResults.where(thingToCheck, '==', true)\n    });\n\n    filteredResults.get().then((querySnapshot) => {\n\n      querySnapshot.forEach(function (doc) {\n        filteredBooks.push({ title: doc.data().title, author: doc.data().author });\n      });\n\n\n      const bookItems = filteredBooks.map((book) => {\n        return <BookItem\n          {...this.props}\n          key={book.title}\n          title={book.title}\n          author={book.author}\n        />\n      });\n\n      this.setState({\n        books: bookItems,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"books-container\">\n        <div className=\"booklist-container\">\n          <div className=\"book-search\">\n            <Link to=\"/addbook/\">Add a book to the library</Link>\n          </div>\n          {this.state.books}\n        </div>\n        <FilterPane addFilterCallback={this.onAddFilter}\n          removeFilterCallback={this.onRemoveFilter}\n          searchBooksCallback={this.onSearchBooks} />\n\n      </div>\n    )\n  }\n\n}\n\nexport default Books;","import React, { Component } from 'react';\nimport firebase from '../firebaseConfig.js';\nimport { Link } from 'react-router-dom';\n\nimport './ShowBook.css';\n\nclass ShowBook extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      book: {},\n    }\n  }\n\n  componentWillMount() {\n    const db = firebase.firestore().collection(\"books\").doc(this.props.match.params.id);\n\n    db.get().then((doc) => {\n      if (doc.exists) {\n        this.setState({\n          book: doc.data(),\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"show-book-container\">\n        <Link to=\"/books/\" className=\"back-link\">Back to book list</Link>\n        <div className=\"book-info\">\n          <img src={this.state.book.thumbnail} alt={this.state.book.title} className=\"thumbnail\"></img>\n          <h2 className=\"title\">{this.state.book.title}</h2>\n          <span className=\"author\"><strong>{this.state.book.author}</strong></span>\n          <span className=\"publish-info\">Published by: {this.state.book.publisher}, {this.state.book.publishedDate}</span>\n          <span className=\"description\">{this.state.book.description}</span>\n          <span className=\"created-by\"><strong>Book added by:</strong> {this.state.book.createdByName ? this.state.book.createdByName : \"\"}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ShowBook;","import React from 'react';\nimport './SearchResultItem.css'\n\nconst SearchResultItem = (props) => {\n\n  const { title, author, thumbnail, description, addBookCallback } = props;\n\n  return (\n    <div className=\"search-results\">\n      <div className=\"search-results-image-and-button\">\n        <img src={thumbnail} alt={title} className=\"search-result-thumbnail\"></img>\n        <span className=\"add-button\"  onClick={() => { addBookCallback(props) }}>Add to Library</span>\n      </div>\n      <span className=\"search-result-title\">{title}</span>\n      <span className=\"search-result-author\"> {author}</span>\n      <span className=\"search-result-description\">{description}</span>\n    </div>\n  )\n}\n\nexport default SearchResultItem;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport firebase from '../firebaseConfig.js';\nimport { Redirect } from 'react-router-dom';\nimport './AddBook.css';\n\nimport SearchResultItem from './SearchResultItem.js'\n\n\n\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes';\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchQuery: \"\",\n      results: [],\n      shouldRedirect: false,\n      addedBook: \"\",\n    }\n  }\n\n  onHandleSearchClick = (event) => {\n    event.preventDefault();\n    this.getBooks();\n  }\n\n  onHandleSearchChange = (event) => {\n    this.setState({\n      searchQuery: event.target.value,\n    })\n  }\n\n  addBook = (book) => {\n    // add book to db\n    const db = firebase.firestore().collection(\"books\");\n\n    db.doc(book.title).set({\n      title: book.title,\n      author: book.author,\n      thumbnail: book.thumbnail,\n      publishedDate: book.publishedDate,\n      publisher: book.publisher,\n      previewLink: book.previewLink,\n      description: book.description,\n      createdByEmail: firebase.auth().currentUser.email,\n      createdByName: firebase.auth().currentUser.displayName,\n    })\n      .then(() => {\n        this.setState({\n          shouldRedirect: true,\n          addedBook: book.title,\n      })\n        console.log(\"Document successfully written!\");\n      })\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n\n  }\n\n\n  getBooks = () => {\n    axios.get(`${API_URL}?q=${this.state.searchQuery}&printType=books`)\n      .then((response) => {\n        const searchList = response.data.items.map((book) => {\n          return <SearchResultItem\n            key={book.id}\n            title={book.volumeInfo.title}\n            author={book.volumeInfo.authors ? book.volumeInfo.authors[0] : \"unknown\"}\n            publishedDate={book.volumeInfo.publishedDate ? book.volumeInfo.publishedDate : \"unknown\"}\n            publisher={book.volumeInfo.publisher ? book.volumeInfo.publisher : \"Unknown\"}\n            thumbnail={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.smallThumbnail : \"\"}\n            description={book.volumeInfo.description ? book.volumeInfo.description : \"\"}\n            previewLink={book.volumeInfo.previewLink ? book.volumeInfo.previewLink : \"\"}\n           \n            addBookCallback={this.addBook}\n          />\n        });\n        this.setState({ results: searchList, movieSearch: '', clickSearch: true })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    if (this.state.shouldRedirect) {\n      return <Redirect to={`/books/${this.state.addedBook}`} />\n  }\n\n    return (\n      <div className=\"add-book-container\">\n        <div className=\"add-book-search-bar\">\n          <label>\n            Search for a new book:\n          <input name=\"search-api\" placeholder=\"Title\" value={this.state.searchQuery} onChange={this.onHandleSearchChange}></input>\n            <span onClick={this.onHandleSearchClick} className=\"submit-button\">Search</span>\n          </label>\n        </div>\n\n        <div className=\"search-results-container\">\n          {this.state.results}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default AddBook;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport './App.css'\nimport Home from \"./components/Home.js\";\nimport Books from './components/Books.js';\nimport ShowBook from './components/ShowBook.js';\nimport AddBook from './components/AddBook.js';\n\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport 'firebase/auth';\nimport firebase from './firebaseConfig';\n// import * as firebase from 'firebase/app';\n\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebase.auth();\n\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authUser: null,\n    }\n  }\n\n  checkAgainstDatabase = (user) => {\n    const docRef = firebase.firestore().collection(\"users\").doc(user.email);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        this.addUserToDatabase(user);\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n\n  }\n\n  addUserToDatabase = (user) => {\n    const db = firebase.firestore();\n        db.collection(\"users\").doc(user.email).set({\n          name: user.displayName,\n          email: user.email,\n        })\n          .then(function () {\n            console.log(\"Document successfully written!\");\n          })\n          .catch(function (error) {\n            console.error(\"Error writing document: \", error);\n          });\n        console.log(\"No such document!\");\n  }\n\n  onSignIn = (event) => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth().signInWithPopup(provider).then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n\n      this.checkAgainstDatabase(user);\n    }).catch(function (error) {\n      // Handle Errors here.\n      // var errorCode = error.code;\n      // var errorMessage = error.message;\n      // // The email of the user's account used.\n      // var email = error.email;\n      // // The firebase.auth.AuthCredential type that was used.\n      // var credential = error.credential;\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      user,\n      signOut,\n    } = this.props;\n\n    return (\n      <Router>\n        <div>\n          <nav>\n            <div className=\"login\">\n              {\n                user\n                  ? <span className=\"login-span\">Hello, {user.displayName}</span>\n                  : <span className=\"login-span\">Please sign in.</span>\n              }\n              {\n                user\n                  ? <span className=\"login-button\" onClick={signOut}>Sign out</span>\n                  : <span className=\"login-button\" onClick={this.onSignIn}>Sign in with Google</span>\n              }\n            </div>\n\n            <h1 className=\"logo\">Check It Out</h1>\n\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/books/\">Full Library</Link>\n              </li>\n              <li>\n                <Link to=\"/users/\">Users</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"status\">\n\n          </div>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path='/books/' exact\n              render={(props) => <Books {...props} />}\n            />\n            <Route path=\"/users/\" component={Users} />\n            <Route path=\"/books/:id\" render={(props) => <ShowBook {...props} />} />\n            <Route path=\"/addbook/\" component={AddBook} />\n          </Switch>\n\n        </div>\n      </Router>\n    )\n  };\n}\n\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}